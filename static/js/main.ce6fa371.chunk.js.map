{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handleClick","event","preventDefault","liked","state","setState","photo","axios","url","apiUrl","method","then","res","console","log","data","this","buttonJsx","className","onClick","media_type","src","alt","title","frameBorder","gesture","allow","allowFullScreen","date","explanation","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAwFeA,E,kDA/Eb,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IAqBTC,YAAc,SAACC,GACdA,EAAMC,iBACN,IAAQC,EAAU,EAAKC,MAAfD,MACR,EAAKE,SAAS,CACbF,OAAQA,KAxBP,EAAKC,MAAQ,CACXE,MAAO,GACPH,OAAO,GAJS,E,qDASpB,WAAsB,IAAD,OAEbI,IAAM,CACZC,IAAKC,uFACLC,OAAQ,QAIPC,MAAK,SAACC,GACNC,QAAQC,IAAIF,GACZ,EAAKP,SAAS,CAAEC,MAAOM,EAAIG,UAC9BF,QAAQC,IAAIE,KAAKZ,MAAME,MAAO,Q,oBAU9B,WACG,IAAIW,EAcJ,OANFA,EAPID,KAAKZ,MAAMD,MAQd,wBAAQe,UAAU,QAAQC,QAASH,KAAKhB,YAAxC,SACC,+CAPD,wBAAQkB,UAAU,WAAWC,QAASH,KAAKhB,YAA3C,SACC,4CAUIgB,KAAKZ,MAAME,QAAU,GAAW,6CAEtC,cAAC,WAAD,UACC,sBAAKY,UAAU,aAAf,UACkC,UAAhCF,KAAKZ,MAAME,MAAMc,WACjB,qBACCC,IAAKL,KAAKZ,MAAME,MAAME,IACtBc,IAAKN,KAAKZ,MAAME,MAAMiB,MACtBL,UAAU,UAGX,wBACCK,MAAM,cACNF,IAAKL,KAAKZ,MAAME,MAAME,IACtBgB,YAAY,IACZC,QAAQ,QACRC,MAAM,kBACNC,iBAAe,EACfT,UAAU,UAGZ,gCAEC,6BAAKF,KAAKZ,MAAME,MAAMiB,QACtB,mBAAGL,UAAU,OAAb,SAAqBF,KAAKZ,MAAME,MAAMsB,OACtC,mBAAGV,UAAU,cAAb,SAA4BF,KAAKZ,MAAME,MAAMuB,iBAE7CZ,W,GAzEYa,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.ce6fa371.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { apiKey, apiUrl } from './apiConfig'\n// import Nav from './components/Nav'\nimport axios from 'axios'\nimport './index.css'\n// const apiKey = process.env.REACT_APP_NASA_KEY\n\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      photo: {},\n      liked: false,\n    }\n  }\n\n\n  componentDidMount () {\n\t    const getPhoto = () => {\n\t\t\treturn axios({\n\t\t\t\turl: apiUrl + apiKey,\n\t\t\t\tmethod: 'GET',\n\t\t\t})\n\t\t}\n\t\tgetPhoto()\n\t\t  .then((res) => {\n\t\t\t  console.log(res)\n\t\t\t  this.setState({ photo: res.data})})\n\t\tconsole.log(this.state.photo, 'aa')\n\t}\n\thandleClick = (event) => {\n\t\tevent.preventDefault()\n\t\tconst { liked } = this.state\n\t\tthis.setState({\n\t\t\tliked: !liked\n\t\t})\n\t}\n\n  render () {\n     let buttonJsx\n\t if (!this.state.liked) {\n\t\t buttonJsx = (\n\t\t\t\t<button className='disliked' onClick={this.handleClick}>\n\t\t\t\t\t<strong>like</strong>\n\t\t\t\t</button>\n\t\t\t)\n\t } else {\n\t\t buttonJsx = (\n\t\t\t\t<button className='liked' onClick={this.handleClick}>\n\t\t\t\t\t<strong>dislike</strong>\n\t\t\t\t</button>\n\t\t\t)\n\t }\n     if (this.state.photo === {}) return <div>Loading...</div>\n    return (\n\t\t\t<Fragment>\n\t\t\t\t<div className='nasa-photo'>\n\t\t\t\t\t{this.state.photo.media_type === 'image' ? (\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={this.state.photo.url}\n\t\t\t\t\t\t\talt={this.state.photo.title}\n\t\t\t\t\t\t\tclassName='photo'\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<iframe\n\t\t\t\t\t\t\ttitle='space-video'\n\t\t\t\t\t\t\tsrc={this.state.photo.url}\n\t\t\t\t\t\t\tframeBorder='0'\n\t\t\t\t\t\t\tgesture='media'\n\t\t\t\t\t\t\tallow='encrypted-media'\n\t\t\t\t\t\t\tallowFullScreen\n\t\t\t\t\t\t\tclassName='photo'\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<h1>{this.state.photo.title}</h1>\n\t\t\t\t\t\t<p className='date'>{this.state.photo.date}</p>\n\t\t\t\t\t\t<p className='explanation'>{this.state.photo.explanation}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t{buttonJsx}\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}